#!/usr/bin/env python3

# HEXASUDOKU-> resolved with online tool 16x16

# This code translate N -> N-1 : A -> 9 , 8->7 etc..
# (The online tool manage only from 1 to G, not from 0 to F)


import hashlib

A = 10
B = 11
C = 12
D = 13
E = 14
F = 15
G = 16

# Result = the suite created by the result (of the solver) when we read it line by line
result = [4,G,1,2,F,7,9,A,6,3,5,D,E,8,B,C,C,9,D,7,8,6,2,5,A,1,E,B,F,4,G,3,3,E,F,B,1,C,4,G,2,9,7,8,6,A,5,D,8,6,5,A,D,B,E,3,4,F,G,C,7,1,2,9,5,F,C,G,4,2,D,9,7,6,1,E,B,3,8,A,2,A,E,9,C,F,6,7,B,D,8,3,1,G,4,5,7,1,B,D,E,A,3,8,G,C,4,5,9,6,F,2,6,3,4,8,5,1,G,B,9,A,F,2,C,E,D,7,G,C,6,E,A,5,7,D,3,4,9,F,8,2,1,B,9,7,3,F,G,E,C,4,8,B,2,1,D,5,A,6,B,5,A,1,9,8,F,2,D,7,6,G,3,C,E,4,D,2,8,4,6,3,B,1,5,E,C,A,G,7,9,F,F,4,7,C,B,D,5,E,1,8,A,6,2,9,3,G,1,D,G,6,3,9,A,C,E,2,B,4,5,F,7,8,A,8,2,3,7,G,1,6,F,5,D,9,4,B,C,E,E,B,9,5,2,4,8,F,C,G,3,7,A,D,6,1,]

mappedLeter = {A : 'A', B : 'B', C : 'C', D : 'D', E : 'E', F : 'F'}

for i, e in enumerate(result):
    result[i] = e-1
    # We change A by 'A' using mappedLetter (same for all others letter)
    if result[i]>9:
        result[i]=mappedLeter[result[i]]
    # We convert each number in str
    result[i]=str(result[i])

# We convert the tab into a string
new_result = "".join(result)

# Getting the SHA256, and putting it in lowercase : We get the flag
print("{"+f'FLG:{str(hashlib.sha256(new_result.encode()).hexdigest()).lower()}'+"}")
